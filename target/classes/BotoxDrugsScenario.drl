package co.pextra.botox;

import java.util.List;

import br.ufes.inf.lprm.scene.model.impl.Situation;
import br.ufes.inf.lprm.scene.util.SituationHelper;
import br.ufes.inf.lprm.situation.annotations.part;
import br.ufes.inf.lprm.situation.model.events.*;
import org.kie.api.runtime.process.ProcessInstance;

declare TemperatureSituation extends Situation
    sensor: Sensor @part
    transactions: List @part
end

/*
Verifica se em uma lista de 3 ou mais temperaturas existem temperaturas acima de -3 graus em uma janela de tempo de 2 minutos. 
*/

rule "Ocorreram 3 alterações de temperatura com o mesmo sensor em 2 minutos"
@role(situation)
@type(TemperatureSituation)
    when
       sensor : Sensor();
       transactions: List(size > 3) from accumulate(
          transaction: TemperatureEvent(sensorId == sensor.sensorId) 
          		over window:time (2m),
          collectList(transaction)
       )
     then
       SituationHelper.situationDetected(drools);
end
rule "Mais de 5 elevações de temperaturas em um intervalo de 2 minutos para um único sensor"
@role(situation)
@type(TemperatureSituation)
    when
       sensor : Sensor();
       transactions: List(size > 5) from accumulate(
          transaction: TemperatureEvent(sensorId == sensor.sensorId, temperature > -5) 
      			over window:time (2m),
          collectList(transaction)
       )
     then
       SituationHelper.situationDetected(drools);
end
rule "Mais de 10 elevações de temperaturas em um intervalo de 2 minutos para um único sensor"
@role(situation)
@type(TemperatureSituation)
    when
       sensor : Sensor();
       transactions: List(size > 10) from accumulate(
          transaction: TemperatureEvent(sensorId == sensor.sensorId, temperature > 0) 
      			over window:time (2m),
          collectList(transaction)
       )
     then
       SituationHelper.situationDetected(drools);
end
rule "inicia uma situação quando houver um caso suspeito"
	when
       temperatureSituation: List(size > 2) from accumulate (
         Activation($sit: situation, $sit isA TemperatureSituation.class) 
     			over window:time (2m);
         collectList($sit)
       )
	then
		//Para 2 (duas) ativações de regras que ocorreram num intervalo de 2 minutos, 
		//um processo é iniciado.
		ProcessInstance processInstance = kcontext.getKieRuntime()
										.startProcess("co.pextra.botox.notification");
end

/*
Se houver mais que 3 situações de elevação de temperatura, em uma janela de tempo de 2D minutos, 
uma ação de notificação de elevação de temperatura é disparada!

## No exemplo exposto são disparados 4 situações de temperaturas acima de -3 graus. vide RuleTest.java##
*/



/* Criar uma regra que verifica se existem 5 SENSORES (e não ocorrencia de temperatura) em uma janela de tempo de 2 minutos com temperatura elevada.
*
* (...)
*
*
*/